-- MySQL Script generated by MySQL Workbench
-- Mon Aug  8 15:34:13 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering


-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `alan`.`advert_group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `alan`.`advert_group` (
  `group_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `group_name` VARCHAR(64) NOT NULL DEFAULT '' COMMENT '',
  `customer_id` VARCHAR(32) NOT NULL DEFAULT '' COMMENT '',
  `day_budget` DECIMAL(10,2) NOT NULL DEFAULT 0.00 COMMENT '',
  `delivery_date` VARCHAR(1024) NOT NULL DEFAULT '' COMMENT '',
  `status` TINYINT(2) NOT NULL DEFAULT 0 COMMENT '',
  `create_time` DATETIME NOT NULL DEFAULT '1000-00-00 00:00:00' COMMENT '',
  `update_time` DATETIME NOT NULL DEFAULT '1000-00-00 00:00:00' COMMENT '',
  `platform` VARCHAR(64) NOT NULL DEFAULT '' COMMENT '',
  `pause_time` DATETIME NOT NULL DEFAULT '1000-00-00 00:00:00' COMMENT '',
  `pause_num` INT NOT NULL DEFAULT 0 COMMENT '',
  `send_status` TINYINT(10) NOT NULL DEFAULT 0 COMMENT '',
  `service_line_code` VARCHAR(32) NOT NULL DEFAULT 'PINPAI-CPC' COMMENT '',
  `total_pv` BIGINT(20) NOT NULL DEFAULT 0 COMMENT '',
  `total_click` INT NOT NULL DEFAULT 0 COMMENT '',
  `total_cost` DECIMAL(20,4) NOT NULL DEFAULT 0.0000 COMMENT '',
  `today_pv` INT NOT NULL DEFAULT 0 COMMENT '',
  `today_click` INT NOT NULL DEFAULT 0 COMMENT '',
  `today_cost` DECIMAL(12,4) NOT NULL DEFAULT 0.0000 COMMENT '',
  PRIMARY KEY (`group_id`)  COMMENT '',
  INDEX `idx_customer_id` (`customer_id` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `alan`.`developer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `alan`.`developer` (
  `developer_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `sso_id` VARCHAR(15) NOT NULL DEFAULT '' COMMENT '',
  `sso_name` VARCHAR(45) NOT NULL DEFAULT '' COMMENT '',
  `developer_name` VARCHAR(45) NOT NULL DEFAULT '' COMMENT '',
  `create_time` DATETIME NOT NULL DEFAULT '1000-00-00 00:00:00' COMMENT '',
  `update_time` DATETIME NOT NULL DEFAULT '1000-00-00 00:00:00' COMMENT '',
  PRIMARY KEY (`developer_id`)  COMMENT '',
  INDEX `idx_sso_id` (`sso_id` ASC)  COMMENT '',
  INDEX `idx_sso_name` (`sso_name` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `alan`.`api_key`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `alan`.`api_key` (
  `key_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `developer_id` INT NOT NULL DEFAULT 0 COMMENT '',
  `pub_key` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '',
  `sec_key` VARCHAR(50) NOT NULL DEFAULT '' COMMENT '',
  `key_role` VARCHAR(8) NOT NULL DEFAULT '00000000' COMMENT '',
  `status` TINYINT(4) NOT NULL DEFAULT 0 COMMENT '',
  `apply_time` DATETIME NOT NULL DEFAULT '1000-00-00 00:00:00' COMMENT '',
  `audit_time` DATETIME NOT NULL DEFAULT '1000-00-00 00:00:00' COMMENT '',
  `reason` VARCHAR(45) NOT NULL DEFAULT '' COMMENT 'reject reason',
  `frequency` INT NOT NULL DEFAULT 0 COMMENT 'request per min',
  PRIMARY KEY (`key_id`)  COMMENT '',
  INDEX `idx_pub_key` (`pub_key` ASC)  COMMENT '',
  INDEX `idx_developer_id` (`developer_id` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `alan`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `alan`.`customer` (
  `customer_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `sso_id` VARCHAR(15) NOT NULL DEFAULT '' COMMENT '',
  `sso_name` VARCHAR(64) NOT NULL DEFAULT '' COMMENT '',
  `client_name` VARCHAR(100) NOT NULL DEFAULT '' COMMENT '',
  `agent_name` VARCHAR(100) NOT NULL DEFAULT '' COMMENT '',
  `create_time` DATETIME NOT NULL DEFAULT '1000-00-00 00:00:00' COMMENT '',
  `update_time` DATETIME NOT NULL DEFAULT '1000-00-00 00:00:00' COMMENT '',
  `status` TINYINT(4) NOT NULL DEFAULT 0 COMMENT '',
  `customer_type` TINYINT(4) NOT NULL DEFAULT 0 COMMENT '',
  PRIMARY KEY (`customer_id`)  COMMENT '',
  INDEX `idx_sso_id` (`sso_id` ASC)  COMMENT '',
  INDEX `idx_sso_name` (`sso_name` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `alan`.`app`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `alan`.`app` (
  `app_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `app_name` VARCHAR(45) NOT NULL DEFAULT '' COMMENT '',
  `developer_id` INT NOT NULL DEFAULT 0 COMMENT '',
  `key_id` INT NOT NULL DEFAULT 0 COMMENT '',
  `create_time` DATETIME NOT NULL DEFAULT '1000-00-00 00:00:00' COMMENT '',
  `update_time` DATETIME NOT NULL DEFAULT '1000-00-00 00:00:00' COMMENT '',
  `status` TINYINT(4) NOT NULL DEFAULT 0 COMMENT '',
  PRIMARY KEY (`app_id`)  COMMENT '',
  INDEX `idx_key_id` (`key_id` ASC)  COMMENT '',
  INDEX `idx_developer_id` (`developer_id` ASC)  COMMENT '')
ENGINE = InnoDB;

USE `alan`;

DELIMITER $$
USE `alan`$$
CREATE DEFINER = CURRENT_USER TRIGGER `alan`.`advert_group_BEFORE_INSERT` BEFORE INSERT ON `advert_group` FOR EACH ROW
BEGIN
  set new.update_time=now();
  set new.create_time=new.update_time;
END
$$

USE `alan`$$
CREATE DEFINER = CURRENT_USER TRIGGER `alan`.`advert_group_BEFORE_UPDATE` BEFORE UPDATE ON `advert_group` FOR EACH ROW
BEGIN
  set new.update_time=now();
END
$$

USE `alan`$$
CREATE DEFINER = CURRENT_USER TRIGGER `alan`.`developer_BEFORE_INSERT` BEFORE INSERT ON `developer` FOR EACH ROW
BEGIN
  set new.update_time=now();
  set new.create_time=new.update_time;
END
$$

USE `alan`$$
CREATE DEFINER = CURRENT_USER TRIGGER `alan`.`developer_BEFORE_UPDATE` BEFORE UPDATE ON `developer` FOR EACH ROW
BEGIN
  set new.update_time=now();
END
$$

USE `alan`$$
CREATE DEFINER = CURRENT_USER TRIGGER `alan`.`customer_BEFORE_INSERT` BEFORE INSERT ON `customer` FOR EACH ROW
BEGIN
  set new.update_time=now();
  set new.create_time=new.update_time;
END
$$

USE `alan`$$
CREATE DEFINER = CURRENT_USER TRIGGER `alan`.`customer_BEFORE_UPDATE` BEFORE UPDATE ON `customer` FOR EACH ROW
BEGIN
  set new.update_time=now();
END
$$

USE `alan`$$
CREATE DEFINER = CURRENT_USER TRIGGER `alan`.`app_BEFORE_INSERT` BEFORE INSERT ON `app` FOR EACH ROW
BEGIN
  set new.update_time=now();
  set new.create_time=new.update_time;
END
$$

USE `alan`$$
CREATE DEFINER = CURRENT_USER TRIGGER `alan`.`app_BEFORE_UPDATE` BEFORE UPDATE ON `app` FOR EACH ROW
BEGIN
  set new.update_time=now();
END
$$


DELIMITER ;

